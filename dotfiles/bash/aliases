# Command Enhancements

alias kindle='sendgmail -t anders.janmyr@kindle.com'
alias kindlepad='sendgmail -t anders.janmyr.ipad2@kindle.com'
alias kindlepad3='sendgmail -t anders.janmyr.ipad3@kindle.com'
alias kindlec='sendgmail -t anders.janmyr@kindle.com -s Convert'

# MySql
alias mysqlstart='mysql.server start'
alias mysqlstop='mysql.server stop'

# Postgres
alias pgstart="pg_ctl -D $BREW_HOME/var/postgres -l $BREW_HOME/var/log/postgres.log start"
alias pgstop="pg_ctl -D $BREW_HOME/var/postgres stop -s -m fast"

# MongoDB
alias mongostart="mongod --fork --config $BREW_HOME/etc/mongod.conf"
alias mongostop="mongod --shutdown --config $BREW_HOME/etc/mongod.conf"

# Redis
alias redisstart="redis-server $BREW_HOME/etc/redis.conf"

# Nginx
alias nx='sudo nginx'
alias nxr='sudo nginx -s reload'

# Apache
alias aps='sudo apachectl restart'


# Utility
alias reload='source ~/.bashrc'
alias vb='v  ~/bin'
alias vn="v  $BREW_HOME/etc/nginx/sites-available"

alias less='less -FRSX'
function h() {
  local pattern=${1:-''}
  history | grep "$pattern"
}

# Dirs
alias la="ls -A -l -G"
alias c='clear'
alias cl='clear; l'
function cdc() {
    cd $1; ls
}
alias l.='ls -d .[^.]*'
alias l='ls -lhGt'  # -l long listing, most recent first
                    # -G color
alias ll='ls -lhG'  # -l long listing, human readable, no group info

alias md='mkdir -p'
alias s='cd ..'   # up one dir

function mcd() {
    mkdir -p "$1"
    cd "$1"
}

function pd() {
  dir=`find ~/Projects -maxdepth 2 -name "$1" -type d | head -1`
  if [ "$dir" != '' ]; then
    pushd "$dir"
  else
    echo "Cannot find project dir with name: $1"
  fi
}


function zipr() {
  zip -r $1.zip $1
}

# Processes
alias tu='top -o cpu' # cpu
alias tm='top -o vsize' # memory
alias k9="killall -9"
function killnamed () {
    ps ax | grep -i $1 | cut -d ' ' -f 1 | xargs kill
}


# Git
function g() {
    local cmd=${1-s}
    shift
    git $cmd "$@"
}
# Commit pending changes and quote all args as message
function gg() {
    git ci -m "$*"
}
alias gd="cd $(git rev-parse --show-toplevel)"
alias ungit="find . -name '.git' -exec rm -rf {} \;"
alias vg='v .git/config'
alias vgg='v ~/.gitconfig'



# Rails
alias r="rails"
alias rdbm="bundle exec rake db:migrate"
alias rdbr="bundle exec rake db:reset"
alias be="bundle exec"

# Todo
alias t="todo.sh"
alias vt="v ~/Dropbox/Todo/todo.txt"


function aiff2mp3() {
  lame -h -V 0 $1.aif $1.mp3
}
function wav2mp3() {
  lame -h -V 0 $1.wav $1.mp3
}

alias tweet='v ~/DropBox/work/tweet.txt'

alias cleardns='sudo killall -HUP mDNSResponder'
alias clearcli='hash -r'

# Search through bundles
function bag() {
  ag "$1" `bundle show --paths`
}

# Docker
function d() {
    local cmd=${1-ps}
    shift
    docker $cmd "$@"
}

# AWS
alias awsconf='source ~/bin/awsconf.sh'
awsconf cdk-exp

# alias whatismyip='curl --silent https://api.myip.com/ | jq -r .ip'
alias whatismyip='dig @resolver1.opendns.com ANY myip.opendns.com +short -4'



alias audio-dl='youtube-dl --extract-audio --audio-format mp3'

alias iphone='xcrun simctl install booted'

alias vi=~/bin/v

function serve() {
  local port=${1:-8000}
  python3 -m http.server "$port"
}

function unix() {
  local ts=${1:-$(date +"%Y-%m-%dT%H:%M:%S")}
  date -u -j -f "%Y-%m-%dT%H:%M:%S" $ts +%s
}

function iso() {
  local ts=${1:-$(date +"%s")}
  date -r $ts -u +"%Y-%m-%dT%H:%M:%S"
}

function srckey() {
  jq -c '.Stacks[] |select(.Parameters[]?.ParameterKey == "SrcKey" ) | { StackName, SrcKey: .Parameters[] | select(.ParameterKey == "SrcKey") | .ParameterValue  }'
}

alias curl="$BREW_HOME/opt/curl/bin/curl"
alias ts='date +%s'

# Chrome
alias chrome_beta='open -a Google\ Chrome\ Beta --args --user-data-dir=/tmp/temporary-chrome-profile-dir --disable-web-security --disable-site-isolation-trials'

alias weather='curl wttr.in'

# Simple calculator8 years ago • Addy Osmani [adds calc]
function calc() {
  local result=""
  result="$(printf "scale=10;$*\n" | bc --mathlib | tr -d '\\\n')"
  #                       └─ default (when `--mathlib` is used) is 20
  #
  if [[ "$result" == *.* ]]; then
    # improve the output for decimal numbers
    printf "$result" |
      sed -e 's/^\./0./'        `# add "0" for cases like ".5"` \
      -e 's/^-\./-0./'      `# add "0" for cases like "-.5"`\
      -e 's/0*$//;s/\.$//'   # remove trailing zeros
        else
          printf "$result"
  fi
  printf "\n"
}

alias filldisk='dd if=/dev/random of=~/tmp/largefile bs=15m'

function jwt(){
    if (( $# > 0)); then
       jq -R 'split(".") | .[1] | @base64d | fromjson' <<< "$1"
    else
       jq -R 'split(".") | .[1] | @base64d | fromjson'
    fi
}

function jwth(){
    if (( $# > 0)); then
        jq -R 'split(".") | .[0] | @base64d | fromjson' <<< "$1"
    else
        jq -R 'split(".") | .[0] | @base64d | fromjson'
    fi
}

alias colima_start='colima start --mount-type 9p'

get_couch_url() {
  aws secretsmanager get-secret-value --secret-id $1EnvironmentSecrets --query 'SecretString' --output text --profile cdk-$1|jq -r '.COUCH_PROTECTED_SERVER_URL'
}

alias unit='numfmt --to=iec'

alias nvim-kickstart='NVIM_APPNAME="kickstart-modular.nvim" nvim'


couch() {
    curl --silent -Hcontent-type:application/json ${COUCH_LOCAL}$1 $2 $3 $4 $5 $6 $7
}

function couchp() {
    curl --silent -H 'Content-Type:application/json' ${COUCH_PROD}$1 $2 $3 $4 $5 $6 $7
}


function couchqa() {
    curl --silent -H 'Content-Type:application/json' ${COUCH_QA}$1 $2 $3 $4 $5 $6 $7
}

