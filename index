#!/bin/bash

# Set up same defaults
set -o errexit # Exit on error
set -o nounset # It is an error to use an unset variable

# Store program name in program var
program=`basename $0`

# Main is called from the end of the script
function main() {
  parse_options
  index_files
}

# Sets variables full and dir
function parse_options() {
  full=false
  while getopts "hf" opt; do
      case "${opt}" in
          h)
              usage
              exit 0
              ;;
          f)
              full=true
              ;;
          *)
              usage
              exit 1;
              ;;
      esac
  done
  shift $((OPTIND-1))

  # Only one argument is allowed
  if [[ $# -gt 1 ]]; then
    usage
    exit 1
  fi

  dir=${1:-.}
}

# Usage text
# A description of the program, followed by an empty line
#
# Usage text
# options described
#
function usage() {
cat <<EOT
"$program" prints a list of commands in the given directory. It prints the header of
the help text (the lines up to the first newline).

Usage: $program [-h] [-f] [dir]
  -h  - Prints this help text
  -f  - Display the full help text, not only the header.
  dir - directory (default is .)
EOT
}

# The script specific code is called from main
function index_files() {
  for file in $dir/*; do
    name=`basename $file`
    if [ -x "$name" ]; then
      usage=`$name -h`
      if [ $full ]; then
        echo $usage
      else
        echo $usage | sed -e '/^$/,$d'
      fi
    fi
  done
}

main
